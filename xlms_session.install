<?php

/**
 * Implements hook_install().
 */
function xlms_session_install() {
  drupal_install_schema('xlms_session');
}

/**
 * Implements hook_uninstall().
 */
function xlms_session_uninstall() {
  drupal_uninstall_schema('xlms_session');
}

/**
 * Implements hook_schema().
 */
function xlms_session_schema() {
  $schema['xlms_session'] = array(
    'description' => t('Information about simulator sessions/attempts.'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'result_id' => array(
        'description' => 'Result ID from the {quiz_node_results}.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'trainer_id' => array(
        'description' => 'Likely just the serial number; data provided by Chrome app',
        'type' => 'varchar',
        'length' => 200,
        'not null' => FALSE,
      ),
      'start_time' => array(
        'description' => 'The start time, as defined by the Chrome app.',
        'type' => 'int',
        'size' => 'big',
      ),
      'elapsed_time' => array(
        'description' => 'Duration of the session, defined by the Chrome app.',
        'type' => 'int',
      ),
      'success' => array(
        'description' => 'Pass/fail boolean for the session.',
        'type' => 'float',
        'not null' => TRUE,
        'default' => 0,
      ),
      'closed' => array(
        'description' => 'Boolean indicating that the session has been closed and thus cannot be accessed through Services.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'session_data' => array(
        'description' => 'JSON output of session results.',
        'type' => 'text',
        'not null' => FALSE,
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'result_id' => array(
        'table' => 'quiz_node_results',
        'columns' => array('result_id' => 'result_id'),
      ),
    ),
  );
  return $schema;
}

/**
 * Add new columns to {xlms_session} table.
 */
function xlms_session_update_7100() {
  // Start time.
  $spec = array(
    'description' => 'The start time, as defined by the Chrome app.',
    'type' => 'int',
  );
  db_add_field('xlms_session', 'start_time', $spec);

  // Elapsed time.
  $spec = array(
    'description' => 'Duration of the session, defined by the Chrome app.',
    'type' => 'int',
  );
  db_add_field('xlms_session', 'elapsed_time', $spec);

  // Success.
  $spec = array(
    'description' => 'Pass/fail boolean for the session.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
  db_add_field('xlms_session', 'success', $spec);
}

/**
 * Add closed column to {xlms_session} table.
 */
function xlms_session_update_7101() {
  $spec = array(
    'description' => 'Boolean indicating that the session has been closed and thus cannot be accessed through Services.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
  db_add_field('xlms_session', 'closed', $spec);
}

/**
 * Change success to a float.
 */
function xlms_session_update_7102() {
  $spec = array(
    'type' => 'float',
    'size' => 'medium',
    'not null' => FALSE,
  );
  db_change_field('xlms_session', 'success', 'success', $spec);
}

/**
 * Change success to a float.
 */
function xlms_session_update_7103() {
  $spec = array(
    'type' => 'int',
    'size' => 'big',
    'not null' => FALSE,
  );
  db_change_field('xlms_session', 'start_time', 'start_time', $spec);
}
